<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>