<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>